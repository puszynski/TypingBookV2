@model TypingBook.ViewModels.Book.BookRowViewModel
@{
    ViewData["Title"] = "Edit Book";
    var counter = 1;
}

<div class="jumbotron">
    <h1>Add new book</h1>
    <p>Todo description - e.g. after adding a new book admins will verify it and than it will became a public one</p>
</div>


<div class="jumbotron">
    <form asp-controller="Book" asp-action="Edit" method="post">
        <input name="nameof(@Model.ID)" type="hidden" value="<removed for brevity>">
        <div class="form-group">
            <label asp-for="nameof(@Model.Title)" class="control-label"></label>
            <input asp-for="nameof(@Model.Title)" class="form-control" />
            <span asp-validation-for="nameof(@Model.Title)" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="nameof(@Model.Description)" class="control-label"></label>
            <textarea rows="5" asp-for="nameof(@Model.Description)" class="form-control"></textarea>
            <span asp-validation-for="nameof(@Model.Description)" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="nameof(@Model.Authors)" class="control-label"></label>
            <input asp-for="nameof(@Model.Authors)" class="form-control" />
            <span asp-validation-for="nameof(@Model.Authors)" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="nameof(@Model.Genre)" class="control-label"></label>
            <select asp-for="nameof(@Model.Genre)" asp-items="@Model.GenreSelectListItem" class="form-control"></select>
            <span asp-validation-for="nameof(@Model.Genre)" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="nameof(@Model.ReleaseDate)" class="control-label"></label>
            <input asp-for="nameof(@Model.ReleaseDate)" class="form-control" />
            <span asp-validation-for="nameof(@Model.ReleaseDate)" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="nameof(@Model.License)" class="control-label"></label>
            <textarea rows="5" asp-for="nameof(@Model.License)" class="form-control"></textarea>
            <span asp-validation-for="nameof(@Model.License)" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="nameof(@Model.Content)" class="control-label"></label>
            <textarea rows="5" asp-for="nameof(@Model.Content)" class="form-control"></textarea>
            <span asp-validation-for="nameof(@Model.Content)" class="text-danger"></span>
        </div>

        <label asp-for="nameof(@Model.Content)" class="control-label"></label>(in pages)
        <span asp-validation-for="nameof(@Model.Content)" class="text-danger"></span>
        @foreach (var bookPage in Model.ContentInBookPages)
        {
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text">Page @(counter++)</span>
                </div>
                <textarea rows="2" asp-for="@bookPage" class="form-control"></textarea>
            </div>
        }

        @if (User.IsInRole("Administrator") && !string.IsNullOrEmpty(Model.ContentBeforeModification))
        {
            <div class="form-group">
                <label asp-for="nameof(@Model.ContentBeforeModification)" class="control-label"></label>
                <textarea rows="5" asp-for="nameof(@Model.ContentBeforeModification)" class="form-control" disabled="disabled"></textarea>
                <span asp-validation-for="nameof(@Model.ContentBeforeModification)" class="text-danger"></span>
            </div>
        }

        <input type="submit" value="Submit changes" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>

        @if (User.IsInRole("Administrator") && !string.IsNullOrEmpty(Model.ContentBeforeModification))
        {
            if (!Model.IsVerified)
            {
                <a asp-action="RebuildBookPages" asp-route-id="@Model.ID" class="btn btn-secondary">Rebuild book pages</a>
            }
            <a asp-action="VerifyBook" asp-route-id="@Model.ID" method="post" class="btn btn-secondary" data-toggle="tooltip" title="Verify books cant use option RebuildBookPages. Book pages are frozen. Only other data can be updated.">Verify book</a>
        }
    </form>
</div>